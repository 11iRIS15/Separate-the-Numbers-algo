using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'separateNumbers' function below.
     *
     * The function accepts STRING s as parameter.
     */

    public static void separateNumbers(string s)
    {
        int length = s.Length;

    // Try different starting lengths (first number can be 1 digit, 2 digits, etc.)
    for (int i = 1; i <= length / 2; i++)
    {
        string firstNumStr = s.Substring(0, i);
        long firstNum = long.Parse(firstNumStr);

        long currentNum = firstNum;
        StringBuilder sequence = new StringBuilder(firstNumStr);

        // Keep generating consecutive numbers and build sequence
        while (sequence.Length < length)
        {
            currentNum++;
            sequence.Append(currentNum.ToString());
        }

        // If the built sequence matches the input string, it's beautiful
        if (sequence.ToString().Equals(s))
        {
            Console.WriteLine("YES " + firstNum);
            return;
        }
    }

    Console.WriteLine("NO");

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        int q = Convert.ToInt32(Console.ReadLine().Trim());

        for (int qItr = 0; qItr < q; qItr++)
        {
            string s = Console.ReadLine();

            Result.separateNumbers(s);
        }
    }
}
